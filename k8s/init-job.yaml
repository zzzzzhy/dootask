apiVersion: batch/v1
kind: Job
metadata:
  name: dootask-init-job
spec:
  template:
    spec:
      initContainers:
      - name: wait-for-mysql
        image: mysql:8.0
        command: ['sh', '-c']
        args:
          - |
            echo "Waiting for MySQL to be ready..."
            until mysql -h dootask-mariadb -u$MYSQL_USERNAME -p$MYSQL_PASSWORD -e "SELECT 1" >/dev/null 2>&1; do
              echo "MySQL is unavailable - sleeping"
              sleep 2
            done
            
            # 尝试创建数据库
            mysql -h dootask-mariadb -u$MYSQL_USERNAME -p$MYSQL_PASSWORD -e "CREATE DATABASE IF NOT EXISTS $MYSQL_DB_NAME CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;"
            
            echo "MySQL is up and ready!"
        env:
        - name: MYSQL_USERNAME
          valueFrom:
            secretKeyRef:
              name: dootask-secret
              key: DB_USERNAME
        - name: MYSQL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: dootask-secret
              key: DB_PASSWORD
        - name: MYSQL_DB_NAME
          valueFrom:
            configMapKeyRef:
              name: dootask-config
              key: DB_DATABASE
      - name: wait-for-redis
        image: redis:alpine
        command: ['sh', '-c']
        args:
          - |
            echo "Waiting for Redis to be ready..."
            until redis-cli -h dootask-redis ping >/dev/null 2>&1; do
              echo "Redis is unavailable - sleeping"
              sleep 2
            done
            echo "Redis is up and ready!"
      - name: init
        image: kuaifan/php:swoole-8.0.rc18
        command: ["/bin/sh", "-c"]
        args:
          - |
            # 创建必要的目录
            mkdir -p /workspace/dootask
            cd /workspace/dootask
            
            # 克隆代码
            git clone -b pro https://github.com/kuaifan/dootask.git .
            git submodule update --init --recursive
            
            # 复制环境配置文件
            cp .env.example .env

            composer install --no-interaction 
            php artisan migrate --seed
            php artisan storage:link
            # 创建应用目录结构
            mkdir -p /app/www
            
            # 复制代码和配置文件
            cp -r /workspace/dootask/. /app/www/
            
            # 创建其他目录
            mkdir -p /app/supervisor/conf.d
            mkdir -p /app/supervisor/log
            mkdir -p /app/php
            mkdir -p /app/nginx/conf.d
            mkdir -p /app/office/logs
            mkdir -p /app/office/data
            mkdir -p /app/office/resources
            mkdir -p /app/drawio/webapp/{js,stencils}
            mkdir -p /app/drawio/export/fonts
            
            # 复制PHP相关文件
            cp docker/crontab/crontab.conf /app/supervisor/conf.d/
            cp docker/php/php.conf /app/supervisor/conf.d/
            cp docker/php/php.ini /app/php/
            cp -r docker/log/supervisor/* /app/supervisor/log/
            
            # 复制Nginx配置
            cp -r docker/nginx/* /app/nginx/conf.d/
            
            # 复制Office相关文件
            cp -r docker/office/resources/* /app/office/resources/
            
            # 复制Drawio相关文件
            cp docker/drawio/webapp/index.html /app/drawio/webapp/
            cp -r docker/drawio/webapp/stencils /app/drawio/webapp/
            cp docker/drawio/webapp/js/app.min.js /app/drawio/webapp/js/
            cp -r docker/drawio/webapp/js/croppie /app/drawio/webapp/js/
            cp docker/drawio/webapp/js/diagramly/ElectronApp.js /app/drawio/webapp/js/diagramly/
            cp -r docker/drawio/export/fonts/* /app/drawio/export/fonts/
            
            # 创建存储目录
            mkdir -p /app/www/storage/app/public
            mkdir -p /app/www/storage/framework/{cache,sessions,views}
            mkdir -p /app/www/storage/logs
            
            # 设置权限
            chown -R 1000:1000 /app
            chmod -R 775 /app/www/storage
            
            echo "Preparation completed successfully"
        env:
        - name: COMPOSER_ALLOW_SUPERUSER
          value: 1
        - name: MYSQL_HOST
          valueFrom:
            configMapKeyRef:
              name: dootask-config
              key: DB_HOST
        - name: MYSQL_PORT
          valueFrom:
            configMapKeyRef:
              name: dootask-config
              key: DB_PORT
        - name: MYSQL_DB_NAME
          valueFrom:
            configMapKeyRef:
              name: dootask-config
              key: DB_DATABASE
        - name: MYSQL_USERNAME
          valueFrom:
            secretKeyRef:
              name: dootask-secret
              key: DB_USERNAME
        - name: MYSQL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: dootask-secret
              key: DB_PASSWORD
        volumeMounts:
        - name: app-data
          mountPath: /var/www
          subPath: www
        - name: app-data
          mountPath: /app
      volumes:
      - name: app-data
        persistentVolumeClaim:
          claimName: dootask-app-pvc
      restartPolicy: OnFailure
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: dootask-app-pvc
spec:
  accessModes:
    - ReadWriteMany
  storageClassName: csi-cephfs-sc
  resources:
    requests:
      storage: 20Gi
