apiVersion: batch/v1
kind: Job
metadata:
  name: dootask-prepare
spec:
  template:
    spec:
      containers:
      - name: prepare
        image: alpine/git
        command: ["/bin/sh", "-c"]
        args:
          - |
            # 创建必要的目录
            mkdir -p /workspace/dootask
            cd /workspace/dootask
            
            # 克隆代码
            git clone -b pro https://github.com/kuaifan/dootask.git .
            git submodule update --init --recursive
            
            # 复制环境配置文件
            cp .env.example .env
            
            # 创建应用目录结构
            mkdir -p /app/www
            mkdir -p /app/supervisor/conf.d
            mkdir -p /app/supervisor/log
            mkdir -p /app/php
            mkdir -p /app/nginx/conf.d
            mkdir -p /app/mysql/conf.d
            mkdir -p /app/mysql
            mkdir -p /app/office/logs
            mkdir -p /app/office/data
            mkdir -p /app/office/resources
            mkdir -p /app/drawio/webapp/{js,stencils}
            mkdir -p /app/drawio/export/fonts
            
            # 复制代码和配置文件
            cp -r /workspace/dootask/* /app/www/
            
            # 复制PHP相关文件
            cp docker/crontab/crontab.conf /app/supervisor/conf.d/
            cp docker/php/php.conf /app/supervisor/conf.d/
            cp docker/php/php.ini /app/php/
            cp -r docker/log/supervisor/* /app/supervisor/log/
            
            # 复制Nginx配置
            cp -r docker/nginx/* /app/nginx/conf.d/
            
            # 复制MySQL配置
            cp docker/mysql/repassword.sh /app/mysql/
            cp -r docker/mysql/conf.d/* /app/mysql/conf.d/
            
            # 复制Office相关文件
            cp -r docker/office/resources/* /app/office/resources/
            
            # 复制Drawio相关文件
            cp docker/drawio/webapp/index.html /app/drawio/webapp/
            cp -r docker/drawio/webapp/stencils /app/drawio/webapp/
            cp docker/drawio/webapp/js/app.min.js /app/drawio/webapp/js/
            cp -r docker/drawio/webapp/js/croppie /app/drawio/webapp/js/
            cp docker/drawio/webapp/js/diagramly/ElectronApp.js /app/drawio/webapp/js/diagramly/
            cp -r docker/drawio/export/fonts/* /app/drawio/export/fonts/
            
            # 设置权限
            chown -R 1000:1000 /app
            
            echo "Preparation completed successfully"
        volumeMounts:
        - name: app-data
          mountPath: /app
      volumes:
      - name: app-data
        persistentVolumeClaim:
          claimName: dootask-app-pvc
      restartPolicy: Never
---
# PVC definitions
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: dootask-app-pvc
spec:
  accessModes:
    - ReadWriteMany
  storageClassName: csi-cephfs-sc
  resources:
    requests:
      storage: 20Gi
